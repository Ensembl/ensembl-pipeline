#!/usr/local/bin/perl


# Copyright [1999-2015] Wellcome Trust Sanger Institute and the EMBL-European Bioinformatics Institute
Copyright [2016-2020] EMBL-European Bioinformatics Institute
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


use Bio::EnsEMBL::Analysis;
use Bio::EnsEMBL::DBSQL::AnalysisAdaptor;
use Bio::EnsEMBL::Pipeline::DBSQL::DBAdaptor;

use strict;
use Getopt::Long;

my $host;
my $user = 'ensadmin';
my $pass = '***';
my $port = 3306;
my $dbname;
my $logic_name;
my $delete;
my $logic_name;
my $status;
my $ruleid
my $deleteall;
my $delete_analysis;

&GetOptions(
            'dbhost:s'  => \$host,
            'dbport:n'  => \$port,
            'dbuser:s'  => \$user,
            'dbpass:s'  => \$pass,
            'dbname:s'  => \$dbname,
            'logic_name:s' => \$logic_name,
            'delete'    => \$delete,
            'delete_all' => \$delete_all,
            'analysis'   => \$analysis,
            'status:s'   => \$status,
            'ruleid:s'   => \$ruleid,
           );

my $db = new Bio::EnsEMBL::Pipeline::DBSQL::DBAdaptor(-host   => $host,
                                                      -user   => $user,
                                                      -pass   => $pass,
                                                      -port   => $port,
                                                      -dbname => $dbname);


# Things we want to do
#
# 1. Delete all jobs  - delete_all
# 2. Delete all jobs of a certain logic_name delete,logic_name 
# 3. Delete all jobs of a certain logic_name and status delete,status,logic_name
# 4. Remove all analysis results of a certain logic_name delete,logic_name,analysis
# 5. Remove a rule (and its conditions) ruleid
# 6. Remove all jobs and analysis results delete_all,analysis

if ($delete) {

  if ($logic_name) {
      my $ana = $db->get_AnalysisAdaptor->fetch_by_logic_name($logic_name);

      if (!defined($ana)) {
          die "No analysis defined with logic_name [$logic_name]\n";
      }
      if ($status) {
        my $num = $db->get_JobAdaptor->delete_by_logic_name_and_status($logic_name,$status);
      } else {
        my $num = $db->get_JobAdaptor->delete_by_logic_name($logic_name);
    }
  }
  if ($analysis) {
     if ($status) {
        # Need all ids with job status status
        # Finally need to remove evidence of them in the input_id_analysis table
     } else {
        # Need to delete across all tables(feature types) with analysis_id $ana->dbID
        # Finally need to remove evidence of them in the input_id_analysis table
     }
  }
 
}

if ($delete_all) {
  # Maybe an 'Are you sure?' here

  $db->get_JobAdaptor->remove_all;

  # Full deletes on all feature types

}

if ($rule_id) {
  # Delete a rule
